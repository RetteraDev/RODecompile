#Embedded file name: C:/Users/user/Documents/WORK/roB/build/tmp/tw2/res/entities\client\impl/impSpriteChallenge.o
from gamestrings import gameStrings
import gamelog
import copy
import gameglobal
import gametypes
from guis import events
from guis import spriteChallengeHelper
import formula

class ImpSpriteChallenge(object):
    """\xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94\xe5\x89\xaf\xe6\x9c\xac"""

    def onSpriteChallengeStart(self, progress, spriteList):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94\xe5\xbc\x80\xe5\xa7\x8b\xe6\x8c\x91\xe6\x88\x98\xef\xbc\x8c\xe8\x87\xb3\xe6\xad\xa4\xef\xbc\x8c\xe7\x8e\xa9\xe5\xae\xb6\xe5\x8d\xb3\xe5\xb0\x86\xe8\xbf\x9b\xe5\x85\xa5\xe5\x89\xaf\xe6\x9c\xac\xef\xbc\x8c\xe5\xbe\x85\xe5\xae\x8c\xe5\x85\xa8\xe8\xbf\x9b\xe5\x85\xa5\xe5\x89\xaf\xe6\x9c\xac\xe5\x90\x8e\xef\xbc\x8c\xe9\x87\x8d\xe6\x96\xb0\xe8\xb0\x83\xe6\x95\xb4\xe8\x8b\xb1\xe7\x81\xb5\xe5\x88\x97\xe8\xa1\xa8\xef\xbc\x8c\xe5\xbc\x80\xe5\xa7\x8b\xe6\x88\x98\xe6\x96\x97
        :param progress: \xe9\x9a\xbe\xe5\xba\xa6
        :param spriteList: \xe6\x89\x80\xe9\x80\x89\xe8\x8b\xb1\xe7\x81\xb5\xe5\x88\x97\xe8\xa1\xa8
        :return:
        """
        gamelog.debug('@zmm onSpriteChallengeStart', progress, spriteList)
        self.spriteChallengeProgress = progress
        self.spriteChallengeList = spriteList
        spriteChallengeHelper.getInstance().addFamiEnd()
        if formula.inSpriteChallengeSpace(self.spaceNo):
            gameglobal.rds.ui.spriteChallengeSelect.show(self.spriteChallengeProgress, False)
        gameglobal.rds.ui.spriteChallengeResult.hide()

    def onGetSpriteChallengeTopRank(self, topRank):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94\xe8\x8e\xb7\xe5\x8f\x96\xe8\x87\xaa\xe5\xb7\xb1\xe5\x9c\xa8\xe6\x8e\x92\xe8\xa1\x8c\xe6\xa6\x9c\xe4\xb8\xad\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d
        :param topRank: \xe6\x8e\x92\xe5\x90\x8d \xe4\xbd\x8d\xe4\xba\x8e[1,10]\xe5\x90\x8d\xe9\x97\xb4\xe7\x9a\x84\xe7\x8e\xa9\xe5\xae\xb6\xef\xbc\x8c\xe6\x98\xaf\xe7\x9c\x9f\xe5\xae\x9e\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d\xe4\xb8\x8d\xe9\x9c\x80\xe8\xa6\x81\xe5\xa4\x84\xe7\x90\x86\xef\xbc\x8c\xe5\xa4\xa7\xe4\xba\x8e10\xe5\x90\x8d\xe5\x90\x8e\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d\xe9\x9c\x80\xe8\xa6\x81\xe6\xbb\xa1\xe8\xb6\xb3\xe5\x81\x87\xe6\x8e\x92\xe5\x90\x8d\xe8\xa7\x84\xe5\x88\x99 index = topRank-const.TOP_SPRITE_CHALLENGE_REAL_TOP_NUM -1
        \xe5\x81\x87\xe6\x8e\x92\xe5\x90\x8d\xe6\x95\xb0\xe6\x8d\xae\xe5\x8f\xaf\xe4\xbb\xa5\xe6\xa0\xb9\xe6\x8d\xae\xe8\xaf\xa5index\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0 FbRewardsNotInTop[index]
        FbRewardsNotInTop : [(0.9,20,10,90,gameStrings.TEXT_IMPSPRITECHALLENGE_30,),(0.6,45,15,60,'10%-30%',)...
        :return:
        """
        gamelog.debug('@zmm onGetSpriteChallengeTopRank', topRank)
        self.spriteChallengeTopRank = topRank
        gameglobal.rds.ui.spriteChallengeReward.refreshRank()

    def onGetWeekSpriteChallengeTopRank(self, topRank):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94\xe8\x8e\xb7\xe5\x8f\x96\xe8\x87\xaa\xe5\xb7\xb1\xe5\x9c\xa8\xe5\x91\xa8\xe6\x8e\x92\xe8\xa1\x8c\xe6\xa6\x9c\xe4\xb8\xad\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d
        :param topRank: \xe6\x8e\x92\xe5\x90\x8d \xe4\xbd\x8d\xe4\xba\x8e[1,50]\xe5\x90\x8d\xe9\x97\xb4\xe7\x9a\x84\xe7\x8e\xa9\xe5\xae\xb6\xef\xbc\x8c\xe6\x98\xaf\xe7\x9c\x9f\xe5\xae\x9e\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d\xe4\xb8\x8d\xe9\x9c\x80\xe8\xa6\x81\xe5\xa4\x84\xe7\x90\x86\xef\xbc\x8c\xe5\xa4\xa7\xe4\xba\x8e50\xe5\x90\x8d\xe5\x90\x8e\xe7\x9a\x84\xe6\x8e\x92\xe5\x90\x8d\xe9\x9c\x80\xe8\xa6\x81\xe6\xbb\xa1\xe8\xb6\xb3\xe5\x81\x87\xe6\x8e\x92\xe5\x90\x8d\xe8\xa7\x84\xe5\x88\x99 index = topRank-const.TOP_SPRITE_CHALLENGE_REAL_TOP_NUM -1
        \xe5\x81\x87\xe6\x8e\x92\xe5\x90\x8d\xe6\x95\xb0\xe6\x8d\xae\xe5\x8f\xaf\xe4\xbb\xa5\xe6\xa0\xb9\xe6\x8d\xae\xe8\xaf\xa5index\xe8\x8e\xb7\xe5\x8f\x96\xe5\x88\xb0 FbRewardsNotInTop[1][index]
        FbRewardsNotInTop : ((1,50,),(((0,0.3,),(0,0.3,),),((0.3,0.65,),(0.3,0.5,),),((0.65,0.9,),(0.5,0.7,),),),),..
        :return:
        """
        gamelog.debug('@zmm onGetWeekSpriteChallengeTopRank', topRank)
        self.spriteChallengeWeekTopRank = topRank
        gameglobal.rds.ui.spriteChallengeReward.refreshRank()

    def onGetLastSpriteList(self, spriteList):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94 \xe8\x8e\xb7\xe5\x8f\x96\xe4\xb8\x8a\xe6\xac\xa1\xe8\x8b\xb1\xe7\x81\xb5\xe9\x80\x89\xe6\x8b\xa9\xe5\x88\x97\xe8\xa1\xa8
        :param spriteList: \xe4\xb8\x8a\xe6\xac\xa1\xe6\x89\x80\xe9\x80\x89\xe8\x8b\xb1\xe7\x81\xb5\xe5\x88\x97\xe8\xa1\xa8
        :return:
        """
        gamelog.debug('@zmm onGetLastSpriteList', spriteList)
        self.spriteChallengeList = spriteList
        spriteChallengeHelper.getInstance().addFamiEnd()

    def onSpriteListConfirm(self):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94 \xe8\x8b\xb1\xe7\x81\xb5\xe9\x80\x89\xe6\x8b\xa9\xe5\x88\x97\xe8\xa1\xa8\xef\xbc\x8c\xe7\xa1\xae\xe8\xae\xa4\xe6\x88\x90\xe5\x8a\x9f
        :return:
        """
        gamelog.debug('@zmm onSpriteListConfirm')
        gameglobal.rds.ui.spriteChallengeSelect.addPushMsg()
        gameglobal.rds.ui.spriteChallengeSelect.hide()

    def set_spriteChallengeStats(self, oldVal):
        if self.spriteChallengeStats:
            self.resultSpriteChallengeStats = self.spriteChallengeStats
            gameglobal.rds.ui.spriteChallengeResult.refreshSpriteList()

    def onEndSpriteChallenge(self, resultInfo):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94\xe5\x89\xaf\xe6\x9c\xac\xe7\x9a\x84\xe7\xbb\x93\xe7\xae\x97\xe5\x9b\x9e\xe8\xb0\x83
        :param resultInfo:
        :return:
        """
        gamelog.debug('@zmm onEndSpriteChallenge', resultInfo)
        self.spriteChallengeResult = resultInfo
        gameglobal.rds.ui.spriteChallengeResult.isGetReward = False
        gameglobal.rds.ui.spriteChallengeSelect.hide()
        gameglobal.rds.ui.spriteChallengeSelect.removePushMsg()
        gameglobal.rds.ui.spriteChallengeResult.show()

    def onQuerySpriteChallengeInfo(self, challengeInfo):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe6\x8c\x91\xe6\x88\x98\xe4\xb8\xbb\xe7\x95\x8c\xe9\x9d\xa2\xe6\x98\xbe\xe7\xa4\xba\xe4\xbf\xa1\xe6\x81\xaf\xe8\x8e\xb7\xe5\x8f\x96\xe5\x9b\x9e\xe8\xb0\x83
        :param challengeInfo:
            challengeInfo = {
            'rank':\xe8\xb5\x9b\xe5\xad\xa3\xe7\xad\x89\xe7\xba\xa7key,
            'season': \xe5\xbd\x93\xe5\x89\x8d\xe8\xb5\x9b\xe5\xad\xa3id,
            'friendSpriteChallengeInfo': \xe5\xbd\x93\xe5\x89\x8d\xe9\x9a\xbe\xe5\xba\xa6\xe6\x8e\x92\xe5\x90\x8d\xe5\x89\x8d\xe4\xb8\x89\xe5\x90\x8d\xe7\x9a\x84\xe5\xa5\xbd\xe5\x8f\x8b,
            'finishProgress': \xe5\xbd\x93\xe5\x89\x8d\xe5\xb7\xb2\xe5\xae\x8c\xe6\x88\x90\xe7\x9a\x84\xe9\x9a\xbe\xe5\xba\xa6\xe5\x89\xaf\xe6\x9c\xac\xef\xbc\x8c
            'maxProgress': \xe7\x8e\xa9\xe5\xae\xb6\xe5\x9c\xa8\xe6\x9c\xac\xe6\x9c\x8d\xe6\x9c\x80\xe7\xbb\x88\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8c\x91\xe6\x88\x98\xe7\x9a\x84\xe6\x9c\x80\xe9\xab\x98\xe5\xb1\x82\xe6\x95\xb0\xef\xbc\x8c
            'availableProgress': \xe7\x8e\xa9\xe5\xae\xb6\xe5\xbd\x93\xe5\x89\x8d\xe5\x8f\xaf\xe6\x8c\x91\xe6\x88\x98\xe7\x9a\x84\xe6\x9c\x80\xe9\xab\x98\xe5\xb1\x82\xe6\x95\xb0\xef\xbc\x8c
        }
        :return:
        """
        gamelog.debug('@zmm onQuerySpriteChallengeInfo', challengeInfo)
        if not getattr(self, 'spriteChallengeInfo', {}):
            self.spriteChallengeInfo = {}
        self.spriteChallengeInfo[challengeInfo['rank']] = challengeInfo
        gameglobal.rds.ui.spriteChallenge.refreshInfo()

    def onGetFriendSpriteChallengeTopRank(self, key, friendTopInfo):
        """
        \xe8\x8b\xb1\xe7\x81\xb5\xe7\x88\xac\xe5\xa1\x94\xef\xbc\x9a\xe8\x8e\xb7\xe5\x8f\x96\xe6\x8c\x87\xe5\xae\x9a\xe7\xad\x89\xe7\xba\xa7\xe6\xae\xb5\xe7\x9a\x84\xe5\xa5\xbd\xe5\x8f\x8b\xe6\x8e\x92\xe8\xa1\x8c\xe6\xa6\x9c\xe6\x95\xb0\xe6\x8d\xae
        :param key: \xe7\xad\x89\xe7\xba\xa7\xe6\xae\xb5
        :param friendTopInfo: \xe5\xa5\xbd\xe5\x8f\x8b\xe6\x8e\x92\xe8\xa1\x8c\xe6\xa6\x9c\xe6\x95\xb0\xe6\x8d\xae
        :return:
        """
        gamelog.debug('@zmm onGetFriendSpriteChallengeTopRank', key, friendTopInfo)
        info = {'lvKey': key,
         'info': friendTopInfo}

    def onQueryHistorySpriteChallengeTopInfo(self, levelRank, historyInfo):
        """
        \xe6\x9f\xa5\xe8\xaf\xa2\xe5\x8e\x86\xe5\xb1\x8a\xe6\x8e\x92\xe8\xa1\x8c\xe6\xa6\x9c\xe6\x95\xb0\xe6\x8d\xae\xe5\x9b\x9e\xe8\xb0\x83
        :param levelRank
        :param historyInfo:
        :return:
        """
        gamelog.debug('@zmm onQueryHistorySpriteChallengeTopInfo', levelRank, historyInfo)
        info = {'lvKey': levelRank,
         'info': historyInfo}

    def onGetSpriteChallengeReward(self, rank, progress):
        gamelog.debug('@zmm onGetSpriteChallengeReward', rank, progress)
        if not getattr(self, 'spriteChallengeInfo', {}):
            self.spriteChallengeInfo = {}
        if not self.spriteChallengeInfo.has_key(rank):
            self.spriteChallengeInfo[rank] = {}
        self.spriteChallengeInfo[rank].setdefault('finishProgress', {})
        self.spriteChallengeInfo[rank]['finishProgress'][progress] = 1
        gameglobal.rds.ui.spriteChallenge.updatelevelItemData()

    def onGetSpriteChallengeSuccReward(self, lvType, progress):
        """\xe9\xa2\x86\xe5\x8f\x96\xe4\xba\x86\xe9\x80\x9a\xe5\x85\xb3\xe5\xa5\x96\xe5\x8a\xb1"""
        gamelog.debug('@zmm onGetSpriteChallengeSuccReward', lvType, progress)
        gameglobal.rds.ui.spriteChallengeResult.isGetReward = True
        spriteChallengeHelper.getInstance().fakeAddBonusTime()
        gameglobal.rds.ui.spriteChallengeResult.refreshBoxState()
        gameglobal.rds.ui.spriteChallengeResult.refreshRewardMc()
        spriteChallengeHelper.getInstance().queryBonusInfo()
