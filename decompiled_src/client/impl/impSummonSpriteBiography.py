#Embedded file name: C:/Users/user/Documents/WORK/roB/build/tmp/tw2/res/entities\client\impl/impSummonSpriteBiography.o
import gamelog
import const
import utils
import cPickle
import zlib
import gameglobal
from summonSpriteBiography import SummonSpriteBiographyTarget, SummonSpriteBiographyTargets, SummonSpriteBiography, SummonSpriteBiographies
from data import summon_sprite_biography_data as SSBD
from data import summon_sprite_info_data as SSID
from cdata import summon_sprite_bio_reverse_data as SSBRD
from cdata import game_msg_def_data as GMDD

class ImpSummonSpriteBiography(object):
    """
    \xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0-\xe5\xae\xa2\xe6\x88\xb7\xe7\xab\xaf
    summonSpriteBioStatsInfo
        \xe4\xb8\x80\xe4\xb8\xaa\xe4\xbf\x9d\xe5\xad\x98\xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9b\xb8\xe5\x85\xb3\xe7\xbb\x9f\xe8\xae\xa1\xe5\x8f\x98\xe9\x87\x8f\xe5\x80\xbc\xe7\x9a\x84dict\xef\xbc\x8ckey\xe4\xb8\xba\xe5\x8f\x98\xe9\x87\x8f\xe5\x90\x8d\xef\xbc\x8cvalue\xe4\xb8\xba\xe7\xbb\x9f\xe8\xae\xa1\xe5\x80\xbc
    summonSpriteBioTargets
        \xe5\xad\x98\xe5\x82\xa8\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9b\xae\xe6\xa0\x87\xe7\x9a\x84\xe7\x8a\xb6\xe6\x80\x81\xe7\xb1\xbb\xe4\xbc\xbcachieveTargets\xef\xbc\x8ckey\xe6\x98\xaftargetId\xef\xbc\x8cvalue\xe6\x98\xafSummonSpriteBiographyTarget\xe5\xaf\xb9\xe8\xb1\xa1
    summonSpriteBio
        \xe4\xb8\x80\xe4\xb8\xaa\xe4\xbf\x9d\xe5\xad\x98\xe5\xb7\xb2\xe8\xa7\xa3\xe9\x94\x81\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9a\x84dict\xef\xbc\x8c\xe4\xb8\x80\xe7\xba\xa7key\xe4\xb8\xbaspriteId\xef\xbc\x8c\xe4\xba\x8c\xe7\xba\xa7key\xe4\xb8\xbabioId\xef\xbc\x8cvalue\xe4\xb8\xba\xe4\xbc\xa0\xe8\xae\xb0\xe6\x95\xb0\xe6\x8d\xae\xe7\xbb\x93\xe6\x9e\x84SummonSpriteBiography
        \xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x80\xe7\xba\xa7key\xe6\x88\x96\xe8\x80\x85\xe4\xba\x8c\xe7\xba\xa7key\xe4\xb8\x8d\xe5\xad\x98\xe5\x9c\xa8\xef\xbc\x8c\xe5\x88\x99\xe8\xaf\xa5\xe4\xbc\xa0\xe8\xae\xb0\xe4\xb8\xba\xe6\x9c\xaa\xe8\xbe\xbe\xe6\x88\x90\xe7\x8a\xb6\xe6\x80\x81
    \xe7\xbb\x9f\xe8\xae\xa1\xe6\x95\xb0\xe6\x8d\xae/\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9b\xae\xe6\xa0\x87/\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9a\x84\xe5\x8f\x98\xe5\x8c\x96\xef\xbc\x8c\xe9\x83\xbd\xe4\xbc\x9a\xe9\x80\x9a\xe7\x9f\xa5\xe5\xae\xa2\xe6\x88\xb7\xe7\xab\xaf
    summon_sprite_biography_data\xe6\x98\xaf\xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0\xe8\xa1\xa8
    summon_sprite_bio_reverse_data\xe6\x98\xafachieveId->(spriteId, bioId)\xe7\x9a\x84\xe5\x8f\x8d\xe8\xa1\xa8
    """

    def onGetSummonSpriteBioData(self, zDataStats, zDataTargets, zDataBio):
        """
        \xe8\x8e\xb7\xe5\x8f\x96\xe6\x88\x98\xe7\x81\xb5\xe7\xbb\x9f\xe8\xae\xa1\xe6\x95\xb0\xe6\x8d\xae\xe7\x9a\x84\xe5\x9b\x9e\xe8\xb0\x83\xef\xbc\x88\xe4\xb8\x8a\xe7\xba\xbf\xe6\x97\xb6\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe4\xb8\xbb\xe5\x8a\xa8\xe5\x8f\x91\xe9\x80\x81\xef\xbc\x89
        :param zDataStats:\xe8\xa2\xab\xe5\x8e\x8b\xe7\xbc\xa9\xe7\x9a\x84\xe7\xbb\x9f\xe8\xae\xa1\xe6\x95\xb0\xe6\x8d\xae 
        """
        gamelog.debug('@xzh onGetSummonSpriteBioData', len(zDataStats), len(zDataTargets), len(zDataBio))
        self.summonSpriteBioStatsInfo.clear()
        self.summonSpriteBioStatsInfo.update(cPickle.loads(zlib.decompress(zDataStats)))
        self.summonSpriteBioTargets.clear()
        self.summonSpriteBioTargets.update(cPickle.loads(zlib.decompress(zDataTargets)))
        self.summonSpriteBio.clear()
        self.summonSpriteBio.update(cPickle.loads(zlib.decompress(zDataBio)))

    def onSummonSpriteBioStatsChange(self, targetIdList, effectList, varName, oldVal, newVal):
        """
        \xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0\xe7\xbb\x9f\xe8\xae\xa1\xe6\x95\xb0\xe6\x8d\xae\xe4\xbf\xae\xe6\x94\xb9\xe6\x97\xb6\xe7\x9a\x84\xe5\x9b\x9e\xe8\xb0\x83
        :param targetIdList: \xe5\x8f\x97\xe5\xbd\xb1\xe5\x93\x8d\xe7\x9a\x84\xe7\x9b\xae\xe6\xa0\x87id\xe5\x88\x97\xe8\xa1\xa8
        :param effectList: \xe5\x8f\x97\xe5\xbd\xb1\xe5\x93\x8d\xe7\x9a\x84\xe4\xbc\xa0\xe8\xae\xb0\xe5\x88\x97\xe8\xa1\xa8\xef\xbc\x8c\xe5\x85\x83\xe7\xb4\xa0\xe4\xb8\xba(spriteId, bioId)
        :param varName: \xe8\xa2\xab\xe4\xbf\xae\xe6\x94\xb9\xe7\x9a\x84\xe5\x8f\x98\xe9\x87\x8f\xe5\x90\x8d
        :param oldVal: \xe6\x97\xa7\xe5\x80\xbc
        :param newVal: \xe6\x96\xb0\xe5\x80\xbc
        """
        gamelog.debug('@xzh onSummonSpriteBioStatsChange', targetIdList, effectList, varName, oldVal, newVal)
        self.summonSpriteBioStatsInfo[varName] = newVal
        gameglobal.rds.ui.summonedWarSpriteBiography.updateBioUnlockInfo(effectList)

    def onSummonSpriteBioTargetDone(self, targetId, effectList, nowTime):
        """
        \xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9b\xae\xe6\xa0\x87\xe7\x9a\x84\xe5\xae\x8c\xe6\x88\x90\xef\xbc\x88\xe4\xb8\x80\xe4\xb8\xaa\xe4\xbc\xa0\xe8\xae\xb0\xe5\xa4\x9a\xe4\xb8\xaa\xe7\x9b\xae\xe6\xa0\x87\xef\xbc\x89
        :param targetId: \xe7\x9b\xae\xe6\xa0\x87id
        :param effectList: \xe5\x8f\x97\xe5\xbd\xb1\xe5\x93\x8d\xe4\xbc\xa0\xe8\xae\xb0list\xef\xbc\x8c\xe5\x85\x83\xe7\xb4\xa0\xe4\xb8\xbatuple\xef\xbc\x8c\xef\xbc\x88spriteId, bioId\xef\xbc\x89
        :param nowTime: \xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe6\x97\xb6\xe9\x97\xb4
        """
        gamelog.debug('@xzh onSummonSpriteBioTargetDone', targetId, effectList)
        if not self.summonSpriteBioTargets.has_key(targetId):
            self.summonSpriteBioTargets[targetId] = SummonSpriteBiographyTarget(targetId)
        self.summonSpriteBioTargets[targetId].done = True
        self.summonSpriteBioTargets[targetId].date = nowTime
        gameglobal.rds.ui.summonedWarSpriteBiography.updateBioUnlockInfo(effectList)

    def onSummonSpriteBiographyDone(self, spriteId, bioId, nowTime):
        """
        \xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0\xe8\xbe\xbe\xe6\x88\x90\xe7\x9a\x84\xe5\x9b\x9e\xe8\xb0\x83
        :param spriteId: \xe6\x88\x98\xe7\x81\xb5id
        :param bioId: \xe4\xbc\xa0\xe8\xae\xb0id
        :param nowTime: \xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe6\x97\xb6\xe9\x97\xb4
        """
        gamelog.debug('@xzh onSummonSpriteBiographyDone', spriteId, bioId, nowTime)
        if not self.summonSpriteBio.has_key(spriteId):
            self.summonSpriteBio[spriteId] = {}
        if bioId not in self.summonSpriteBio[spriteId]:
            achieveId = SSBD.data.get((spriteId, bioId), {}).get('achieveId')
            self.summonSpriteBio[spriteId][bioId] = SummonSpriteBiography(achieveId)
        self.summonSpriteBio[spriteId][bioId].isDone = True
        self.summonSpriteBio[spriteId][bioId].doneDate = nowTime

    def onUnlockSummonSpriteBio(self, unlockSucc, spriteId, bioId, nowTime):
        """
        \xe8\xa7\xa3\xe9\x94\x81\xe6\x88\x98\xe7\x81\xb5\xe4\xbc\xa0\xe8\xae\xb0\xe7\x9a\x84\xe5\x9b\x9e\xe8\xb0\x83
        :param unlockSucc: \xe6\x98\xaf\xe5\x90\xa6\xe8\xa7\xa3\xe9\x94\x81\xe6\x88\x90\xe5\x8a\x9f
        :param spriteId: \xe6\x88\x98\xe7\x81\xb5id
        :param bioId: \xe4\xbc\xa0\xe8\xae\xb0id
        :param bioId: \xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe6\x97\xb6\xe9\x97\xb4
        """
        gamelog.debug('@xzh onUnlockSummonSpriteBio', unlockSucc, spriteId, bioId, nowTime)
        if unlockSucc:
            self.summonSpriteBio[spriteId][bioId].isUnlock = True
            self.summonSpriteBio[spriteId][bioId].unlocakTime = nowTime
            gameglobal.rds.ui.summonedWarSpriteBiography.updateBioUnlockSucc(spriteId, bioId)
            spriteName = SSID.data.get(spriteId, {}).get('name', '')
            if spriteName and bioId == const.SUMMON_SPRITE_JUEXING_NEED_BIO:
                self.showGameMsg(GMDD.data.SPRITE_BIOGROPHY4_FINISHED_MSG, (spriteName,))

    def _hasDoneBiography(self, spriteId, bioId):
        """
        \xe6\xa3\x80\xe6\x9f\xa5\xe4\xb8\x80\xe4\xb8\xaa\xe4\xbc\xa0\xe8\xae\xb0\xe6\x98\xaf\xe5\x90\xa6\xe4\xb8\xba\xe5\xae\x8c\xe6\x88\x90\xe7\x8a\xb6\xe6\x80\x81\xef\xbc\x88\xe5\xae\x8c\xe6\x88\x90\xe4\xb9\x8b\xe5\x90\x8e\xe6\x89\x8d\xe8\x83\xbd\xe8\xa7\xa3\xe9\x94\x81\xef\xbc\x89
        :param spriteId: \xe6\x88\x98\xe7\x81\xb5id
        :param bioId: \xe4\xbc\xa0\xe8\xae\xb0id
        :return: 
        """
        if not self.summonSpriteBio.has_key(spriteId) or not self.summonSpriteBio[spriteId].has_key(bioId):
            return False
        return self.summonSpriteBio[spriteId][bioId].isDone

    def onGmResetSpriteBio(self):
        self.summonSpriteBioStatsInfo.clear()
        self.summonSpriteBioTargets.clear()
        self.summonSpriteBio.clear()
        gameglobal.rds.ui.summonedWarSpriteBiography.updateManualOrBiography()

    def onUnlockSpriteBioInMoney(self, spriteID, bioID):
        gamelog.debug('@zhangkuo onUnlockSpriteBioInMoney', spriteID, bioID)
        self.summonSpriteBio[spriteID][bioID].isUnlock = True
        gameglobal.rds.ui.summonedWarSpriteBiography.updateBioUnlockSucc(spriteID, bioID)
