#Embedded file name: /WORKSPACE/data/entities/common/pubgutils.o
import utils
import const
import random
import math
import Math
import gamelog
import gameconfigCommon
from sMath import pi
from cdata import pubg_safe_area_data as PSAD
from data import duel_config_data as DCD
from cdata import pubg_rank_points_data as PRPD
from cdata import pubg_rank_points_season_data as PRPSD
APPSETTING_AUTO_PICK_SETTING = 'autoPickSetting'
APPSETTING_AUTO_PICK_ENABLE = 'autoPickEnable'
APPSETTING_AUTO_PICK_FILTER = 'autoPickFilter'
PUBG_POISON_STATE_HOLD = 1
PUBG_POISON_STATE_SHRINK = 2
PUBG_POISON_STATE_END = 3
POISON_REFRESH_INTERVAL = 0.01
AIRPLANE_REFRESH_INTERVAL = 0.2
SET_EQUIP_ITEM_AUTO_INTERVAL = 0.6
PUBG_LEFT_NUM_IDX = 0
PUBG_KILL_NUM_IDX = 1
PUBG_ASSIST_NUM_IDX = 2
PUBG_ALL_NUM_IDX = 3
PUBG_LEFT_NUM_IN_PLANE_IDX = 4
PUBG_YINDAO_MSG_TIME_INTERVAL = 10
PUBG_YINDAO_MSG_THIRD_AHEAD_TIME = 15
PUBG_GUILD_TIP_PREPARE = 1
PUBG_GUILD_TIP_ONPLANE = 2
PUBG_GUILD_TIP_DROPPING = 3
PUBG_GUILD_TIP_ON_GROUND = 4
PUBG_STATE_PROGRESS_NONE = 0
PUBG_STATE_PROGRESS_PREPARE = 1
PUBG_STATE_PROGRESS_WAIT_AIRPLANE = 2
PUBG_STATE_PROGRESS_FLY_AIRPLANE = 3
PUBG_STATE_PROGRESS_FLY_AIRPLANE_CAN_DROP = 4
PUBG_STATE_PROGRESS_FLY_AIRPLANE_FORCE_DROP = 5
PUBG_STATE_PROGRESS_FLY_START = 6
PUBG_STATE_PROGRESS_FLY_FALL_ON_THE_GROUND = 7
PUBG_STATE_PROGRESS_FLY_ALL_END = 8
PUBG_ENDING_GBID_IDX = 1
PUBG_ENDING_ROLENAME_IDX = 2
PUBG_ENDING_KILL_IDX = 3
PUBG_ENDING_ASSIST_KILL_IDX = 4
PUBG_ENDING_BATTLE_SCORE_IDX = 5
PUBG_ENDING_ACTIVE_SCORE_IDX = 6
PUBG_ENDING_AWARD_IDX = 7
PUBG_ENDING_POINT_IDX = 8
PUBG_ENDING_DELTA_POINT_IDX = 9
PUBG_ENDING_WEEK_MAX_RANK_IDX = 10
PUBG_ENDING_OTHERS_IDX = 100
PUBG_ENDING_RANK_IDX = 101
PUBG_ENDING_DURING_TIME_IDX = 102
PUBG_ENDING_ALL_RANK_IDX = 103
AUTO_PICK_EQUIPMENT = 1
AUTO_PICK_SKILL = 2
AUTO_PICK_POTION = 3
AUTO_PICK_OTHERS = 4
AUTO_PICK_ALL_TYPE = frozenset([AUTO_PICK_EQUIPMENT, AUTO_PICK_SKILL, AUTO_PICK_POTION])
TEAMMATE_LIFE_ALIVE = 1
TEAMMATE_LIFE_DEAD = 2
TEAMMATE_LIFE_WEAK = 3
CIRCLE_ANGLE = 360
BOSS_ALIVE = 1
BOSS_DIE = 2
MAX_CYCLE = 9999
BOSS_MAX_CYCLE = 100
DEFAULT_DIR = (0, 0, 0)
DEFAULT_POS = (0, 0, 0)
ADD_BUFF_BY_RANDOM = 1
ADD_BUFF_BY_KILL = 2
CHECK_DUEL_INTERVAL = 5
REFRESH_TREASURE_BOX_POSITION_INTERVAL = 5
MAX_TEAM_NUM = 5
DEATH_BY_AVATAR = 1
DEATH_BY_POISON = 2
DEATH_BY_DISASTER = 3
DEATH_BY_OFFLINE = 4
DEATH_BY_OTHERS = 5
PUBG_NOTIFY_MSG_GBID = 1
PUBG_NOTIFY_MSG_ROLENAME = 2
MEMBER_EXTRA_PUBG_BOSS = 1
MEMBER_EXTRA_PUBG_TREASURE = 2
MEMBER_EXTRA_PUBG_ITEM = 3
MEMBER_EXTRA_PUBG_SKILL = 4
PUBG_EXTRA_COMBO_WIN = 101
PUBG_EXTRA_MAX_RANK_WEEKLY = 102
PUBG_STATISTICS_TOP_RANK_WEEKLY = 103
PUBG_EXTRA_STAMP_WEEKLY = 104
PUBG_EXTRA_LAST_OFFLINE_RES = 105
PUBG_EXTRA_LAST_OFFLINE_EXTRA = 106
PUBG_STATISTICS_PARTICIPATE_CNT_WEEKLY = 110
PUBG_STATISTICS_KILL_CNT_WEEKLY = 112
PUBG_STATISTICS_ASSIST_CNT_WEEKLY = 114
PUBG_STATISTICS_DAMAGE_CNT_WEEKLY = 115
PUBG_STATISTICS_DURING_TIME_WEEKLY = 116
PUBG_STATISTICS_FAME_WEEKLY = 117
PUBG_STATISTICS_PARTICIPATE_CNT_SEASON = 120
PUBG_STATISTICS_TOP_RANK_SEASON = 121
PUBG_STATISTICS_KILL_CNT_SEASON = 122
PUBG_STATISTICS_TOTAL_RANK_FOR_AVERAGE_SEASON = 123
PUBG_STATISTICS_ASSIST_CNT_SEASON = 124
PUBG_STATISTICS_DAMAGE_SEASON = 125
PUBG_STATISTICS_ACTIVE_SCORE_SEASON = 126
PUBG_STATISTICS_DURING_TIME_SEASON = 127
PUBG_STATISTICS_PARTICIPATE_CNT_LAST_WEEK = 131
PUBG_STATISTICS_KILL_CNT_LAST_WEEK = 132
PUBG_STATISTICS_TOP_RANK_LAST_WEEK = 133
PUBG_STATISTICS_ASSIST_CNT_LAST_WEEK = 134
PUBG_STATISTICS_DAMAGE_CNT_LAST_WEEK = 135
PUBG_STATISTICS_DURING_TIME_LAST_WEEK = 136
PUBG_STATISTICS_DURING_TIME_LAST_WEEK_AVERAGE = 137
PUBG_STATISTICS_EAT_CHICKEN_CNT_FOREVER = 150
PUBG_STATISTICS_PARTICIPATE_CNT_FOREVER = 151
PUBG_STATISTICS_KILL_CNT_FOREVER = 152
PUBG_STATISTICS_ASSIST_CNT_FOREVER = 153
PUBG_STATISTICS_VERSION_FOREVER = 199
PUBG_CLIENT_HISTORY_DATA_KEY = (PUBG_STATISTICS_EAT_CHICKEN_CNT_FOREVER,
 PUBG_STATISTICS_PARTICIPATE_CNT_FOREVER,
 PUBG_STATISTICS_KILL_CNT_FOREVER,
 PUBG_STATISTICS_ASSIST_CNT_FOREVER,
 PUBG_STATISTICS_PARTICIPATE_CNT_SEASON,
 PUBG_STATISTICS_KILL_CNT_SEASON,
 PUBG_STATISTICS_ASSIST_CNT_SEASON,
 PUBG_STATISTICS_DAMAGE_SEASON,
 PUBG_STATISTICS_PARTICIPATE_CNT_LAST_WEEK,
 PUBG_STATISTICS_TOP_RANK_LAST_WEEK,
 PUBG_STATISTICS_KILL_CNT_LAST_WEEK,
 PUBG_STATISTICS_ASSIST_CNT_LAST_WEEK,
 PUBG_STATISTICS_DAMAGE_CNT_LAST_WEEK)
PUBG_STATISTICS_WEEKLY_DICT = {PUBG_STATISTICS_PARTICIPATE_CNT_LAST_WEEK: PUBG_STATISTICS_PARTICIPATE_CNT_WEEKLY,
 PUBG_STATISTICS_KILL_CNT_LAST_WEEK: PUBG_STATISTICS_KILL_CNT_WEEKLY,
 PUBG_STATISTICS_TOP_RANK_LAST_WEEK: PUBG_STATISTICS_TOP_RANK_WEEKLY,
 PUBG_STATISTICS_ASSIST_CNT_LAST_WEEK: PUBG_STATISTICS_ASSIST_CNT_WEEKLY,
 PUBG_STATISTICS_DAMAGE_CNT_LAST_WEEK: PUBG_STATISTICS_DAMAGE_CNT_WEEKLY,
 PUBG_STATISTICS_DURING_TIME_LAST_WEEK: PUBG_STATISTICS_DURING_TIME_WEEKLY}
PUBG_STATISTICS_WEEKLY_LIST = (PUBG_EXTRA_COMBO_WIN,
 PUBG_STATISTICS_TOP_RANK_WEEKLY,
 PUBG_STATISTICS_PARTICIPATE_CNT_WEEKLY,
 PUBG_EXTRA_MAX_RANK_WEEKLY,
 PUBG_STATISTICS_KILL_CNT_WEEKLY,
 PUBG_STATISTICS_ASSIST_CNT_WEEKLY,
 PUBG_STATISTICS_DAMAGE_CNT_WEEKLY,
 PUBG_STATISTICS_DURING_TIME_WEEKLY,
 PUBG_STATISTICS_FAME_WEEKLY)
PUBG_STATISTICS_SEASON_LIST = (PUBG_STATISTICS_PARTICIPATE_CNT_SEASON,
 PUBG_STATISTICS_TOP_RANK_SEASON,
 PUBG_STATISTICS_KILL_CNT_SEASON,
 PUBG_STATISTICS_TOTAL_RANK_FOR_AVERAGE_SEASON,
 PUBG_STATISTICS_ASSIST_CNT_SEASON,
 PUBG_STATISTICS_DAMAGE_SEASON,
 PUBG_STATISTICS_ACTIVE_SCORE_SEASON,
 PUBG_STATISTICS_DURING_TIME_SEASON)
PUBG_STATISTICS_FOREVER_LIST = (PUBG_STATISTICS_EAT_CHICKEN_CNT_FOREVER,
 PUBG_STATISTICS_PARTICIPATE_CNT_FOREVER,
 PUBG_STATISTICS_KILL_CNT_FOREVER,
 PUBG_STATISTICS_ASSIST_CNT_FOREVER)
WIN_DUEL_INTERVAL = 2
WIN_RANK_INDEX = 1
LOSE_RANK_MAX_INDEX = 99
WIN_DUEL_FLAG = 1
LOSE_DUEL_FLAG = -1
REMAIN_TYPE_PREPARE_AREA = 1
REMAIN_TYPE_PLANE = 2
TREASURE_BOX_APPEAR = 1
TREASURE_BOX_DISAPPEAR = 2
IN_SAFE_AREA = 1
NOT_IN_SAFE_AREA = 2
MONSTER_TYPE_BOSS = 1
MONSTER_TYPE_DISASTER = 2
PUPPET_QUERY_POS_CNT_LIMIT = 20
BOSS_TEMP_CAMP = 101
PUPPET_TEMP_CAMP = 102
NOT_LAST_ONE_DIE_VAL = -1
PUPPET_TELEPORT_DISTANCE = 100
PUPPET_TELEPORT_HEIGHT = 100
PUPPET_REFRESH_EQUIP_SPECIAL_BONUS = 5
NOTIFY_OPEN_BATTLE_FIELD = 1
NOTIFY_CLOSE_BATTLE_FIELD = 2
NOTIFY_TYPE_CIRCLE_DICT = {NOTIFY_OPEN_BATTLE_FIELD: NOTIFY_CLOSE_BATTLE_FIELD,
 NOTIFY_CLOSE_BATTLE_FIELD: NOTIFY_OPEN_BATTLE_FIELD}
STATSINFO_TOP_RANK_WEEKLY = 'pubgTopRankWeekly'
STATSINFO_MAX_RANK_WEEKLY = 'pubgMaxRankWeekly'

def pubgGenRamdomPos(radius, centerPos):
    x, y, z = centerPos
    thetaX = thetaZ = 0
    cnt = 0
    while cnt <= MAX_CYCLE:
        thetaX = (random.random() - 0.5) * 2 * radius
        thetaZ = (random.random() - 0.5) * 2 * radius
        if pow(thetaX, 2) + pow(thetaZ, 2) <= pow(radius, 2):
            break

    return (x + thetaX, y, z + thetaZ)


def pubgGenDir(startPos, endPos):
    yaw = (Math.Vector3(endPos) - Math.Vector3(startPos)).yaw
    return (0, 0, yaw)


def isInSafeArea(fbNo, nowStamp, nowPos, stage, stamp, nowCenter, nextCenter):
    tgtPos, tgtRadius = calcCenterAndRadius(fbNo, nowStamp, stage, stamp, nowCenter, nextCenter)
    return pow(tgtPos[0] - nowPos[0], 2) + pow(tgtPos[2] - nowPos[2], 2) <= pow(tgtRadius, 2)


def calcCenterAndRadius(fbNo, nowStamp, stage, stamp, nowCenter, nextCenter):
    oldPsad = {}
    if gameconfigCommon.enablePUBGNewSafeArea():
        oldPsad = PSAD.data.get((fbNo, stage - 1), {})
    else:
        oldPsad = PSAD.data.get(stage - 1, {})
    if not oldPsad:
        radius = DCD.data.get('pubgInitialCircleRadius', 0)
    else:
        radius = oldPsad.get('radius', 0)
    newPsad = PSAD.data.get(stage, {})
    interval = nowStamp - stamp
    holdTime, shrinkTime = newPsad.get('holdTime', 0), newPsad.get('shrinkTime', 0)
    nextRadius = newPsad.get('radius', 0)
    if interval <= holdTime:
        return (nowCenter, radius)
    elif interval >= holdTime + shrinkTime:
        return (nextCenter, nextRadius)
    else:
        totalT = interval - holdTime
        deltaX = float(nowCenter[0] - nextCenter[0]) / shrinkTime
        deltaZ = float(nowCenter[2] - nextCenter[2]) / shrinkTime
        deltaR = float(radius - nextRadius) / shrinkTime
        tgtPos = (nowCenter[0] - totalT * deltaX, nowCenter[1], nowCenter[2] - totalT * deltaZ)
        tgtRadius = radius - totalT * deltaR
        return (tgtPos, tgtRadius)


def puppetGetOrientation(srcPos, srcDir, tgtPos):
    oldYaw = srcDir[2]
    yaw = (tgtPos - srcPos).yaw
    rotate = oldYaw - yaw
    rotate = 2 * pi - rotate if rotate > 0 else abs(rotate)
    return rotate


def calcRankPointsLv(rankPoints):
    for lv, detail in PRPD.data.iteritems():
        if detail['rank1'] <= rankPoints <= detail['rank2']:
            return lv

    return 0


def getRankPointsLvRewardMailID(lv):
    return PRPD.data.get(lv, {}).get('rankMailId', 0)


def getRankPointsSeasonRewardMailID(lv):
    return PRPD.data.get(lv, {}).get('seasonMailId', 0)


def calcRankPointsSeasonIdx(t):
    for idx, detail in PRPSD.data.iteritems():
        start = utils.getTimeSecondFromStr(detail['startDay'])
        end = utils.getTimeSecondFromStr(detail['endDay'])
        if start <= t <= end:
            return idx

    return 0


def isSamePubgSeason(now, lastBuyTime):
    season = calcRankPointsSeasonIdx(now)
    lastBuySeason = calcRankPointsSeasonIdx(lastBuyTime)
    if lastBuySeason == season:
        return True
    if not season or not lastBuySeason:
        return True
    return False
